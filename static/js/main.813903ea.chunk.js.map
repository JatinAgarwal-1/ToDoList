{"version":3,"sources":["Component/ToDo.jsx","App.js","reportWebVitals.js","index.js"],"names":["ToDo","useState","inputData","setInputData","items","setItems","toggle","setToggle","Id","setId","addItem","map","element","id","name","data","Date","getTime","toString","alert","className","src","alt","type","value","onChange","e","target","placeholder","onKeyPress","event","key","title","onClick","item","index","editedItem","find","editItem","updatedItems","filter","deleteItem","data-sm-link-text","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mLAsGeA,EAnGF,WACT,IACA,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4BJ,oBAAS,GAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAoBN,mBAAS,MAA7B,mBAAOO,EAAP,KAAWC,EAAX,KACMC,EAAU,WACX,GAAIR,GAAaI,EACdD,EACID,EAAMO,KAAI,SAACC,GACP,OAAIA,EAAQC,KAAOL,EACR,2BAAII,GAAX,IAAoBE,KAAOZ,IAExBU,MAGXL,GAAU,QAEb,GAAGL,EAAU,CACd,IAAMa,EAAO,CAACF,IAAK,IAAIG,MAAOC,UAAUC,WAAYJ,KAAOZ,GAC3DG,EAAS,GAAD,mBAAKD,GAAL,CAAaW,UAGrBI,MAAM,qBAEVhB,EAAa,KAmBjB,OACI,mCACA,qBAAKiB,UAAU,YAAf,SACI,sBAAKA,UAAU,YAAf,UACI,mCACI,qBAAKC,IAhDT,kBAgDmBC,IAAI,aACnB,4EAEJ,sBAAKF,UAAU,YAAf,UACI,uBAAOG,KAAK,OAAOC,MAAStB,EAC5BuB,SAAY,SAACC,GAAD,OAAMvB,EAAauB,EAAEC,OAAOH,QACvCI,YAAa,sBACbC,WACG,SAACC,GACgB,UAAdA,EAAMC,KACLrB,OAIJJ,EAAQ,mBAAGc,UAAY,sBAAsBY,MAAQ,cAC7CC,QAAUvB,IACR,mBAAGU,UAAY,qBAAqBY,MAAQ,WAC9CC,QAAUvB,OAG1B,qBAAKU,UAAU,YAAf,SAEOhB,EAAMO,KAAI,SAACuB,EAAOC,GACjB,OACI,sBAAKf,UAAU,WAAf,UACI,6BAAKc,EAAKpB,OACX,sBAAKM,UAAU,WAAf,UACK,mBAAGA,UAAU,sBAAsBY,MAAM,YACrCC,QAAW,kBA1C9B,SAACpB,GACdN,GAAU,GACV,IAAM6B,EAAahC,EAAMiC,MAAK,SAACzB,GAC3B,OAAOA,EAAQC,KAAOA,KAE1BV,EAAaiC,EAAWtB,MACxBL,EAAMI,GAoC2CyB,CAASJ,EAAKrB,OACnC,mBAAGO,UAAU,2BAA2BY,MAAM,cAC1CC,QAAW,kBAnD5B,SAACpB,GAChB,IAAM0B,EAAenC,EAAMoC,QAAO,SAAC5B,EAAUuB,GACrC,OAAOvB,EAAQC,KAAOA,KAE9BR,EAASkC,GA+CwCE,CAAWP,EAAKrB,YANdqB,EAAKrB,SAchD,qBAAKO,UAAU,YAAf,SACI,wBAAQA,UAAY,eAAesB,oBAAoB,aACvDT,QAAW,WAAO5B,EAAS,KAD3B,SACkC,0DChFvCsC,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.813903ea.chunk.js","sourcesContent":["import React , {useState} from 'react';\r\nimport'../App.css';\r\n\r\nconst ToDo = () => {\r\n    const img = 'images/logo.jpg';\r\n    const [inputData, setInputData] = useState('');\r\n    const [items, setItems] = useState([]);\r\n    const [toggle, setToggle] = useState(false);\r\n    const [Id, setId] = useState(null);\r\n    const addItem = () =>{\r\n         if (inputData && toggle){\r\n            setItems(\r\n                items.map((element) =>{\r\n                    if (element.id === Id){\r\n                        return {...element ,name : inputData};\r\n                    }\r\n                    return element;\r\n                })\r\n            ); \r\n                setToggle(false);\r\n            }\r\n        else if(inputData){\r\n            const data = {id : new Date().getTime().toString(), name : inputData};\r\n            setItems([...items , data]);\r\n        }\r\n        else {\r\n            alert('Please Enter Data');\r\n        }\r\n        setInputData('');\r\n    };\r\n\r\n    const deleteItem = (id) => {\r\n        const updatedItems = items.filter((element , index) =>{\r\n                return element.id !== id ;\r\n        }); \r\n        setItems(updatedItems)\r\n    }\r\n\r\n    const editItem = (id) => {\r\n        setToggle(true);\r\n        const editedItem = items.find((element) =>{\r\n            return element.id === id;\r\n        });\r\n        setInputData(editedItem.name);\r\n        setId(id);\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <div className=\"main-div \">\r\n            <div className=\"child-div\">\r\n                <figure>\r\n                    <img src={img} alt=\"todoLogo\" />\r\n                    <figcaption>Add Your List Here 🤘</figcaption>\r\n                </figure>\r\n                <div className=\" addItems\">\r\n                    <input type=\"text\" value = {inputData}\r\n                    onChange = {(e) =>setInputData(e.target.value)}\r\n                     placeholder ='✍ Add Items...' \r\n                     onKeyPress = { \r\n                        (event)=>{ \r\n                        if(event.key === 'Enter'){ \r\n                            addItem(); \r\n                        }} \r\n                    }/>\r\n                    {\r\n                        toggle ?<i className = 'fas fa-edit add-btn' title = 'Update Item'\r\n                                onClick ={addItem}></i>\r\n                                : <i className = 'fa fa-plus add-btn' title = 'Add Item'\r\n                                onClick ={addItem}></i>\r\n                    }\r\n                </div>\r\n                <div className=\"showItems\">\r\n                   {\r\n                       items.map((item , index) =>{\r\n                        return(\r\n                            <div className=\"eachItem\" key={item.id}>\r\n                                <h3>{item.name}</h3>\r\n                               <div className=\"todo-btn\">\r\n                                    <i className=\"fas fa-edit add-btn\" title='Edit Item'\r\n                                        onClick = {() => editItem(item.id)}></i>\r\n                                    <i className=\"fas fa-trash-alt add-btn\" title='Delete Item' \r\n                                        onClick = {() => deleteItem(item.id)}></i>\r\n                               </div>\r\n                            </div>\r\n                        )\r\n                       })\r\n                   }\r\n                </div>\r\n                {/* clear all <button></button> */}\r\n                <div className=\"showItems\">\r\n                    <button className = 'btn effect04' data-sm-link-text = 'Remove All'\r\n                    onClick ={ () => {setItems([])} }><span>\r\n                        Check List\r\n                        </span></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ToDo;","// import logo from './logo.svg';\nimport './App.css';\nimport Todo from './Component/ToDo';\n\nfunction App() {\n  return (\n    < >\n      <Todo />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}